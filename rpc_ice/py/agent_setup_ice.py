# -*- coding: utf-8 -*-
# **********************************************************************
#
# Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.6.4
#
# <auto-generated>
#
# Generated from file `agent_setup.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
import utils_ice
import Ice_BuiltinSequences_ice
import Ice_Identity_ice

# Included module Utils
_M_Utils = Ice.openModule('Utils')

# Included module Ice
_M_Ice = Ice.openModule('Ice')

# Start of module AgentSetup
_M_AgentSetup = Ice.openModule('AgentSetup')
__name__ = 'AgentSetup'

if 'AgentSetupReceiver' not in _M_AgentSetup.__dict__:
    _M_AgentSetup.AgentSetupReceiver = Ice.createTempClass()
    class AgentSetupReceiver(Ice.Object):
        def __init__(self):
            if Ice.getType(self) == _M_AgentSetup.AgentSetupReceiver:
                raise RuntimeError('AgentSetup.AgentSetupReceiver is an abstract class')

        def ice_ids(self, current=None):
            return ('::AgentSetup::AgentSetupReceiver', '::Ice::Object')

        def ice_id(self, current=None):
            return '::AgentSetup::AgentSetupReceiver'

        def ice_staticId():
            return '::AgentSetup::AgentSetupReceiver'
        ice_staticId = staticmethod(ice_staticId)

        def queryRunnerAbsPath(self, current=None):
            pass

        def searchBootFileAbsPath(self, current=None):
            pass

        def prepareAgentInfo(self, flagJson, current=None):
            pass

        def getFileInfo(self, fileName, flagJson, current=None):
            pass

        def generateKeyInfos(self, absFilePath, flagJson, current=None):
            pass

        def open(self, absFilePath, flagJson, current=None):
            pass

        def pread(self, handle, byteOffset, bytes, current=None):
            pass

        def pwrite(self, handle, byteOffset, bytes, data, current=None):
            pass

        def close(self, handle, current=None):
            pass

        def extractFile(self, absSourceFilePath, absDestinationPath, flagJson, current=None):
            pass

        def executeCommand(self, cmd, flagJson, current=None):
            pass

        def reportStatus(self, contentJson, current=None):
            pass

        def exit(self, returnCode, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_AgentSetup._t_AgentSetupReceiver)

        __repr__ = __str__

    _M_AgentSetup.AgentSetupReceiverPrx = Ice.createTempClass()
    class AgentSetupReceiverPrx(Ice.ObjectPrx):

        def queryRunnerAbsPath(self, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_queryRunnerAbsPath.invoke(self, ((), _ctx))

        def begin_queryRunnerAbsPath(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_queryRunnerAbsPath.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_queryRunnerAbsPath(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_queryRunnerAbsPath.end(self, _r)

        def searchBootFileAbsPath(self, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_searchBootFileAbsPath.invoke(self, ((), _ctx))

        def begin_searchBootFileAbsPath(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_searchBootFileAbsPath.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_searchBootFileAbsPath(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_searchBootFileAbsPath.end(self, _r)

        def prepareAgentInfo(self, flagJson, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_prepareAgentInfo.invoke(self, ((flagJson, ), _ctx))

        def begin_prepareAgentInfo(self, flagJson, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_prepareAgentInfo.begin(self, ((flagJson, ), _response, _ex, _sent, _ctx))

        def end_prepareAgentInfo(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_prepareAgentInfo.end(self, _r)

        def getFileInfo(self, fileName, flagJson, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_getFileInfo.invoke(self, ((fileName, flagJson), _ctx))

        def begin_getFileInfo(self, fileName, flagJson, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_getFileInfo.begin(self, ((fileName, flagJson), _response, _ex, _sent, _ctx))

        def end_getFileInfo(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_getFileInfo.end(self, _r)

        def generateKeyInfos(self, absFilePath, flagJson, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_generateKeyInfos.invoke(self, ((absFilePath, flagJson), _ctx))

        def begin_generateKeyInfos(self, absFilePath, flagJson, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_generateKeyInfos.begin(self, ((absFilePath, flagJson), _response, _ex, _sent, _ctx))

        def end_generateKeyInfos(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_generateKeyInfos.end(self, _r)

        def open(self, absFilePath, flagJson, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_open.invoke(self, ((absFilePath, flagJson), _ctx))

        def begin_open(self, absFilePath, flagJson, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_open.begin(self, ((absFilePath, flagJson), _response, _ex, _sent, _ctx))

        def end_open(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_open.end(self, _r)

        def pread(self, handle, byteOffset, bytes, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_pread.invoke(self, ((handle, byteOffset, bytes), _ctx))

        def begin_pread(self, handle, byteOffset, bytes, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_pread.begin(self, ((handle, byteOffset, bytes), _response, _ex, _sent, _ctx))

        def end_pread(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_pread.end(self, _r)

        def pwrite(self, handle, byteOffset, bytes, data, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_pwrite.invoke(self, ((handle, byteOffset, bytes, data), _ctx))

        def begin_pwrite(self, handle, byteOffset, bytes, data, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_pwrite.begin(self, ((handle, byteOffset, bytes, data), _response, _ex, _sent, _ctx))

        def end_pwrite(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_pwrite.end(self, _r)

        def close(self, handle, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_close.invoke(self, ((handle, ), _ctx))

        def begin_close(self, handle, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_close.begin(self, ((handle, ), _response, _ex, _sent, _ctx))

        def end_close(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_close.end(self, _r)

        def extractFile(self, absSourceFilePath, absDestinationPath, flagJson, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_extractFile.invoke(self, ((absSourceFilePath, absDestinationPath, flagJson), _ctx))

        def begin_extractFile(self, absSourceFilePath, absDestinationPath, flagJson, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_extractFile.begin(self, ((absSourceFilePath, absDestinationPath, flagJson), _response, _ex, _sent, _ctx))

        def end_extractFile(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_extractFile.end(self, _r)

        def executeCommand(self, cmd, flagJson, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_executeCommand.invoke(self, ((cmd, flagJson), _ctx))

        def begin_executeCommand(self, cmd, flagJson, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_executeCommand.begin(self, ((cmd, flagJson), _response, _ex, _sent, _ctx))

        def end_executeCommand(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_executeCommand.end(self, _r)

        def reportStatus(self, contentJson, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_reportStatus.invoke(self, ((contentJson, ), _ctx))

        def begin_reportStatus(self, contentJson, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_reportStatus.begin(self, ((contentJson, ), _response, _ex, _sent, _ctx))

        def end_reportStatus(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_reportStatus.end(self, _r)

        def exit(self, returnCode, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_exit.invoke(self, ((returnCode, ), _ctx))

        def begin_exit(self, returnCode, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiver._op_exit.begin(self, ((returnCode, ), _response, _ex, _sent, _ctx))

        def end_exit(self, _r):
            return _M_AgentSetup.AgentSetupReceiver._op_exit.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_AgentSetup.AgentSetupReceiverPrx.ice_checkedCast(proxy, '::AgentSetup::AgentSetupReceiver', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_AgentSetup.AgentSetupReceiverPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

        def ice_staticId():
            return '::AgentSetup::AgentSetupReceiver'
        ice_staticId = staticmethod(ice_staticId)

    _M_AgentSetup._t_AgentSetupReceiverPrx = IcePy.defineProxy('::AgentSetup::AgentSetupReceiver', AgentSetupReceiverPrx)

    _M_AgentSetup._t_AgentSetupReceiver = IcePy.defineClass('::AgentSetup::AgentSetupReceiver', AgentSetupReceiver, -1, (), True, False, None, (), ())
    AgentSetupReceiver._ice_type = _M_AgentSetup._t_AgentSetupReceiver

    AgentSetupReceiver._op_queryRunnerAbsPath = IcePy.Operation('queryRunnerAbsPath', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (), (), ((), IcePy._t_string, False, 0), (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_searchBootFileAbsPath = IcePy.Operation('searchBootFileAbsPath', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (), (), ((), IcePy._t_string, False, 0), (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_prepareAgentInfo = IcePy.Operation('prepareAgentInfo', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_string, False, 0), (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_getFileInfo = IcePy.Operation('getFileInfo', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_string, False, 0), (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_generateKeyInfos = IcePy.Operation('generateKeyInfos', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), None, (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_open = IcePy.Operation('open', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_string, False, 0), (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_pread = IcePy.Operation('pread', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_long, False, 0), ((), IcePy._t_int, False, 0)), (), ((), _M_Ice._t_ByteSeq, False, 0), (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_pwrite = IcePy.Operation('pwrite', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_long, False, 0), ((), IcePy._t_int, False, 0), ((), _M_Ice._t_ByteSeq, False, 0)), (), None, (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_close = IcePy.Operation('close', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), None, (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_extractFile = IcePy.Operation('extractFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), None, (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_executeCommand = IcePy.Operation('executeCommand', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (((), _M_Ice._t_StringSeq, False, 0), ((), _M_Ice._t_StringSeq, False, 0)), ((), IcePy._t_int, False, 0), (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_reportStatus = IcePy.Operation('reportStatus', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (((), IcePy._t_string, False, 0),), (), None, (_M_Utils._t_SystemError,))
    AgentSetupReceiver._op_exit = IcePy.Operation('exit', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_int, False, 0),), (), None, ())

    _M_AgentSetup.AgentSetupReceiver = AgentSetupReceiver
    del AgentSetupReceiver

    _M_AgentSetup.AgentSetupReceiverPrx = AgentSetupReceiverPrx
    del AgentSetupReceiverPrx

if 'AgentSetupSession' not in _M_AgentSetup.__dict__:
    _M_AgentSetup.AgentSetupSession = Ice.createTempClass()
    class AgentSetupSession(Ice.Object):
        def __init__(self):
            if Ice.getType(self) == _M_AgentSetup.AgentSetupSession:
                raise RuntimeError('AgentSetup.AgentSetupSession is an abstract class')

        def ice_ids(self, current=None):
            return ('::AgentSetup::AgentSetupSession', '::Ice::Object')

        def ice_id(self, current=None):
            return '::AgentSetup::AgentSetupSession'

        def ice_staticId():
            return '::AgentSetup::AgentSetupSession'
        ice_staticId = staticmethod(ice_staticId)

        def queryName(self, current=None):
            pass

        def destroy(self, current=None):
            pass

        def initiateReceiver(self, ident, current=None):
            pass

        def refresh(self, current=None):
            pass

        def startSetup(self, flagJson, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_AgentSetup._t_AgentSetupSession)

        __repr__ = __str__

    _M_AgentSetup.AgentSetupSessionPrx = Ice.createTempClass()
    class AgentSetupSessionPrx(Ice.ObjectPrx):

        def queryName(self, _ctx=None):
            return _M_AgentSetup.AgentSetupSession._op_queryName.invoke(self, ((), _ctx))

        def begin_queryName(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupSession._op_queryName.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_queryName(self, _r):
            return _M_AgentSetup.AgentSetupSession._op_queryName.end(self, _r)

        def destroy(self, _ctx=None):
            return _M_AgentSetup.AgentSetupSession._op_destroy.invoke(self, ((), _ctx))

        def begin_destroy(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupSession._op_destroy.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_destroy(self, _r):
            return _M_AgentSetup.AgentSetupSession._op_destroy.end(self, _r)

        def initiateReceiver(self, ident, _ctx=None):
            return _M_AgentSetup.AgentSetupSession._op_initiateReceiver.invoke(self, ((ident, ), _ctx))

        def begin_initiateReceiver(self, ident, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupSession._op_initiateReceiver.begin(self, ((ident, ), _response, _ex, _sent, _ctx))

        def end_initiateReceiver(self, _r):
            return _M_AgentSetup.AgentSetupSession._op_initiateReceiver.end(self, _r)

        def refresh(self, _ctx=None):
            return _M_AgentSetup.AgentSetupSession._op_refresh.invoke(self, ((), _ctx))

        def begin_refresh(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupSession._op_refresh.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_refresh(self, _r):
            return _M_AgentSetup.AgentSetupSession._op_refresh.end(self, _r)

        def startSetup(self, flagJson, _ctx=None):
            return _M_AgentSetup.AgentSetupSession._op_startSetup.invoke(self, ((flagJson, ), _ctx))

        def begin_startSetup(self, flagJson, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupSession._op_startSetup.begin(self, ((flagJson, ), _response, _ex, _sent, _ctx))

        def end_startSetup(self, _r):
            return _M_AgentSetup.AgentSetupSession._op_startSetup.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_AgentSetup.AgentSetupSessionPrx.ice_checkedCast(proxy, '::AgentSetup::AgentSetupSession', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_AgentSetup.AgentSetupSessionPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

        def ice_staticId():
            return '::AgentSetup::AgentSetupSession'
        ice_staticId = staticmethod(ice_staticId)

    _M_AgentSetup._t_AgentSetupSessionPrx = IcePy.defineProxy('::AgentSetup::AgentSetupSession', AgentSetupSessionPrx)

    _M_AgentSetup._t_AgentSetupSession = IcePy.defineClass('::AgentSetup::AgentSetupSession', AgentSetupSession, -1, (), True, False, None, (), ())
    AgentSetupSession._ice_type = _M_AgentSetup._t_AgentSetupSession

    AgentSetupSession._op_queryName = IcePy.Operation('queryName', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (), (), ((), IcePy._t_string, False, 0), ())
    AgentSetupSession._op_destroy = IcePy.Operation('destroy', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (), (), None, ())
    AgentSetupSession._op_initiateReceiver = IcePy.Operation('initiateReceiver', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (((), _M_Ice._t_Identity, False, 0),), (), None, (_M_Utils._t_SystemError,))
    AgentSetupSession._op_refresh = IcePy.Operation('refresh', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (), (), None, ())
    AgentSetupSession._op_startSetup = IcePy.Operation('startSetup', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (((), IcePy._t_string, False, 0),), (), None, (_M_Utils._t_SystemError,))

    _M_AgentSetup.AgentSetupSession = AgentSetupSession
    del AgentSetupSession

    _M_AgentSetup.AgentSetupSessionPrx = AgentSetupSessionPrx
    del AgentSetupSessionPrx

if 'AgentSetupSessionFactory' not in _M_AgentSetup.__dict__:
    _M_AgentSetup.AgentSetupSessionFactory = Ice.createTempClass()
    class AgentSetupSessionFactory(Ice.Object):
        def __init__(self):
            if Ice.getType(self) == _M_AgentSetup.AgentSetupSessionFactory:
                raise RuntimeError('AgentSetup.AgentSetupSessionFactory is an abstract class')

        def ice_ids(self, current=None):
            return ('::AgentSetup::AgentSetupSessionFactory', '::Ice::Object')

        def ice_id(self, current=None):
            return '::AgentSetup::AgentSetupSessionFactory'

        def ice_staticId():
            return '::AgentSetup::AgentSetupSessionFactory'
        ice_staticId = staticmethod(ice_staticId)

        def create(self, info, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_AgentSetup._t_AgentSetupSessionFactory)

        __repr__ = __str__

    _M_AgentSetup.AgentSetupSessionFactoryPrx = Ice.createTempClass()
    class AgentSetupSessionFactoryPrx(Ice.ObjectPrx):

        def create(self, info, _ctx=None):
            return _M_AgentSetup.AgentSetupSessionFactory._op_create.invoke(self, ((info, ), _ctx))

        def begin_create(self, info, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_AgentSetup.AgentSetupSessionFactory._op_create.begin(self, ((info, ), _response, _ex, _sent, _ctx))

        def end_create(self, _r):
            return _M_AgentSetup.AgentSetupSessionFactory._op_create.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_AgentSetup.AgentSetupSessionFactoryPrx.ice_checkedCast(proxy, '::AgentSetup::AgentSetupSessionFactory', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_AgentSetup.AgentSetupSessionFactoryPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

        def ice_staticId():
            return '::AgentSetup::AgentSetupSessionFactory'
        ice_staticId = staticmethod(ice_staticId)

    _M_AgentSetup._t_AgentSetupSessionFactoryPrx = IcePy.defineProxy('::AgentSetup::AgentSetupSessionFactory', AgentSetupSessionFactoryPrx)

    _M_AgentSetup._t_AgentSetupSessionFactory = IcePy.defineClass('::AgentSetup::AgentSetupSessionFactory', AgentSetupSessionFactory, -1, (), True, False, None, (), ())
    AgentSetupSessionFactory._ice_type = _M_AgentSetup._t_AgentSetupSessionFactory

    AgentSetupSessionFactory._op_create = IcePy.Operation('create', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), _M_AgentSetup._t_AgentSetupSessionPrx, False, 0), (_M_Utils._t_SystemError,))

    _M_AgentSetup.AgentSetupSessionFactory = AgentSetupSessionFactory
    del AgentSetupSessionFactory

    _M_AgentSetup.AgentSetupSessionFactoryPrx = AgentSetupSessionFactoryPrx
    del AgentSetupSessionFactoryPrx

# End of module AgentSetup
