# -*- coding: utf-8 -*-
# **********************************************************************
#
# Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.6.4
#
# <auto-generated>
#
# Generated from file `WatchPowerServ.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
import utils_ice

# Included module Utils
_M_Utils = Ice.openModule('Utils')

# Start of module WatchPowerServ
_M_WatchPowerServ = Ice.openModule('WatchPowerServ')
__name__ = 'WatchPowerServ'

if 'PowerOffProc' not in _M_WatchPowerServ.__dict__:
    _M_WatchPowerServ.PowerOffProc = Ice.createTempClass()
    class PowerOffProc(Ice.Object):
        def __init__(self):
            if Ice.getType(self) == _M_WatchPowerServ.PowerOffProc:
                raise RuntimeError('WatchPowerServ.PowerOffProc is an abstract class')

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::WatchPowerServ::PowerOffProc')

        def ice_id(self, current=None):
            return '::WatchPowerServ::PowerOffProc'

        def ice_staticId():
            return '::WatchPowerServ::PowerOffProc'
        ice_staticId = staticmethod(ice_staticId)

        def CreatePowerOffProc(self, servName, procScript, current=None):
            pass

        def DeletePowerOffProc(self, ident, current=None):
            pass

        def GetTime(self, current=None):
            pass

        def __str__(self):
            return IcePy.stringify(self, _M_WatchPowerServ._t_PowerOffProc)

        __repr__ = __str__

    _M_WatchPowerServ.PowerOffProcPrx = Ice.createTempClass()
    class PowerOffProcPrx(Ice.ObjectPrx):

        def CreatePowerOffProc(self, servName, procScript, _ctx=None):
            return _M_WatchPowerServ.PowerOffProc._op_CreatePowerOffProc.invoke(self, ((servName, procScript), _ctx))

        def begin_CreatePowerOffProc(self, servName, procScript, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_WatchPowerServ.PowerOffProc._op_CreatePowerOffProc.begin(self, ((servName, procScript), _response, _ex, _sent, _ctx))

        def end_CreatePowerOffProc(self, _r):
            return _M_WatchPowerServ.PowerOffProc._op_CreatePowerOffProc.end(self, _r)

        def DeletePowerOffProc(self, ident, _ctx=None):
            return _M_WatchPowerServ.PowerOffProc._op_DeletePowerOffProc.invoke(self, ((ident, ), _ctx))

        def begin_DeletePowerOffProc(self, ident, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_WatchPowerServ.PowerOffProc._op_DeletePowerOffProc.begin(self, ((ident, ), _response, _ex, _sent, _ctx))

        def end_DeletePowerOffProc(self, _r):
            return _M_WatchPowerServ.PowerOffProc._op_DeletePowerOffProc.end(self, _r)

        def GetTime(self, _ctx=None):
            return _M_WatchPowerServ.PowerOffProc._op_GetTime.invoke(self, ((), _ctx))

        def begin_GetTime(self, _response=None, _ex=None, _sent=None, _ctx=None):
            return _M_WatchPowerServ.PowerOffProc._op_GetTime.begin(self, ((), _response, _ex, _sent, _ctx))

        def end_GetTime(self, _r):
            return _M_WatchPowerServ.PowerOffProc._op_GetTime.end(self, _r)

        def checkedCast(proxy, facetOrCtx=None, _ctx=None):
            return _M_WatchPowerServ.PowerOffProcPrx.ice_checkedCast(proxy, '::WatchPowerServ::PowerOffProc', facetOrCtx, _ctx)
        checkedCast = staticmethod(checkedCast)

        def uncheckedCast(proxy, facet=None):
            return _M_WatchPowerServ.PowerOffProcPrx.ice_uncheckedCast(proxy, facet)
        uncheckedCast = staticmethod(uncheckedCast)

        def ice_staticId():
            return '::WatchPowerServ::PowerOffProc'
        ice_staticId = staticmethod(ice_staticId)

    _M_WatchPowerServ._t_PowerOffProcPrx = IcePy.defineProxy('::WatchPowerServ::PowerOffProc', PowerOffProcPrx)

    _M_WatchPowerServ._t_PowerOffProc = IcePy.defineClass('::WatchPowerServ::PowerOffProc', PowerOffProc, -1, (), True, False, None, (), ())
    PowerOffProc._ice_type = _M_WatchPowerServ._t_PowerOffProc

    PowerOffProc._op_CreatePowerOffProc = IcePy.Operation('CreatePowerOffProc', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_string, False, 0), (_M_Utils._t_SystemError,))
    PowerOffProc._op_DeletePowerOffProc = IcePy.Operation('DeletePowerOffProc', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), None, (_M_Utils._t_SystemError,))
    PowerOffProc._op_GetTime = IcePy.Operation('GetTime', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_string, False, 0), (_M_Utils._t_SystemError,))

    _M_WatchPowerServ.PowerOffProc = PowerOffProc
    del PowerOffProc

    _M_WatchPowerServ.PowerOffProcPrx = PowerOffProcPrx
    del PowerOffProcPrx

# End of module WatchPowerServ
