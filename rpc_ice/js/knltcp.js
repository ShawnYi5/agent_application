// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `knltcp.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var IMG = require("img").IMG;
    var Utils = require("utils").Utils;
    var Slice = Ice.Slice;

    var KTService = __M.module("KTService");
    Slice.defineSequence(KTService, "BinaryStreamHelper", "Ice.ByteHelper", true);

    KTService.Token = Slice.defineStruct(
        function(token, snapshot, keepAliveIntervalSeconds, expiryMinutes, diskBytes)
        {
            this.token = token !== undefined ? token : "";
            this.snapshot = snapshot !== undefined ? snapshot : null;
            this.keepAliveIntervalSeconds = keepAliveIntervalSeconds !== undefined ? keepAliveIntervalSeconds : 3600;
            this.expiryMinutes = expiryMinutes !== undefined ? expiryMinutes : 1440;
            this.diskBytes = diskBytes !== undefined ? diskBytes : new Ice.Long(0, 0);
        },
        true,
        function(__os)
        {
            __os.writeString(this.token);
            IMG.ImageSnapshotIdentsHelper.write(__os, this.snapshot);
            __os.writeInt(this.keepAliveIntervalSeconds);
            __os.writeInt(this.expiryMinutes);
            __os.writeLong(this.diskBytes);
        },
        function(__is)
        {
            this.token = __is.readString();
            this.snapshot = IMG.ImageSnapshotIdentsHelper.read(__is);
            this.keepAliveIntervalSeconds = __is.readInt();
            this.expiryMinutes = __is.readInt();
            this.diskBytes = __is.readLong();
        },
        18, 
        false);

    KTService.KTS = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::KTService::KTS"
        ],
        -1, undefined, undefined, false);

    KTService.KTSPrx = Slice.defineProxy(Ice.ObjectPrx, KTService.KTS.ice_staticId, undefined);

    Slice.defineOperations(KTService.KTS, KTService.KTSPrx,
    {
        "ping": [, , , , , , , , , , ],
        "update": [, , , , , , [[KTService.Token]], , 
        [
            Utils.SystemError
        ], , ],
        "updateTrafficControl": [, , , , , , [[4], [7], [3]], , 
        [
            Utils.SystemError
        ], , ],
        "refreshNetwork": [, , , , , , , , , , ],
        "setPreReadBitmap": [, 2, 2, , , , [[KTService.Token], [4], ["KTService.BinaryStreamHelper"]], , 
        [
            Utils.SystemError
        ], , ]
    });
    exports.KTService = KTService;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
