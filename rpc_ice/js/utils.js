// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `utils.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Slice = Ice.Slice;

    var Utils = __M.module("Utils");

    Utils.ErrorBase = Slice.defineUserException(
        function(description, debug, _cause)
        {
            Ice.UserException.call(this, _cause);
            this.description = description !== undefined ? description : "";
            this.debug = debug !== undefined ? debug : "";
        },
        Ice.UserException,
        "Utils::ErrorBase",
        function(__os)
        {
            __os.writeString(this.description);
            __os.writeString(this.debug);
        },
        function(__is)
        {
            this.description = __is.readString();
            this.debug = __is.readString();
        },
        false,
        false);

    /**
     * 系统调用失败错误
     **/
    Utils.SystemError = Slice.defineUserException(
        function(description, debug, rawCode, _cause)
        {
            Utils.ErrorBase.call(this, description, debug, _cause);
            this.rawCode = rawCode !== undefined ? rawCode : 0;
        },
        Utils.ErrorBase,
        "Utils::SystemError",
        function(__os)
        {
            __os.writeLong(this.rawCode);
        },
        function(__is)
        {
            this.rawCode = __is.readLong();
        },
        false,
        false);

    Utils.NeedRetryLaterError = Slice.defineUserException(
        function(description, debug, _cause)
        {
            Utils.ErrorBase.call(this, description, debug, _cause);
        },
        Utils.ErrorBase,
        "Utils::NeedRetryLaterError",
        undefined, undefined,
        false,
        false);

    Utils.CreateSnapshotImageError = Slice.defineUserException(
        function(description, debug, rawCode, _cause)
        {
            Utils.SystemError.call(this, description, debug, rawCode, _cause);
        },
        Utils.SystemError,
        "Utils::CreateSnapshotImageError",
        undefined, undefined,
        false,
        false);

    Utils.OperationNotExistError = Slice.defineUserException(
        function(description, debug, _cause)
        {
            Utils.ErrorBase.call(this, description, debug, _cause);
        },
        Utils.ErrorBase,
        "Utils::OperationNotExistError",
        undefined, undefined,
        false,
        false);
    Slice.defineSequence(Utils, "BinaryStreamHelper", "Ice.ByteHelper", true);

    Utils.Callable = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::Utils::Callable"
        ],
        -1, undefined, undefined, false);

    Utils.CallablePrx = Slice.defineProxy(Ice.ObjectPrx, Utils.Callable.ice_staticId, undefined);

    Slice.defineOperations(Utils.Callable, Utils.CallablePrx,
    {
        "execute": [, , , , , , [[7], [7], ["Utils.BinaryStreamHelper"]], [[7], ["Utils.BinaryStreamHelper"]], 
        [
            Utils.SystemError
        ], , ]
    });
    exports.Utils = Utils;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
